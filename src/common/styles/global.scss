@use "sass:map";
@use 'sass:math';

@function getAllColors($colors, $step-count: 10, $grays: $grays){
    $step-half: math.div($step-count, 2);
    $step-key-interval: math.div(1000, $step-count);
    $step-val-interval: math.div(100%, $step-half);
    $all-colors: ();
    @each $name, $color in $colors {
        @if $name == 'gray' {
            @each $num, $color in $grays {
                $key: #{ $name + '-' + $num };
                $val: $color;
                
                $all-colors: map.set($all-colors, $key, $val);
            }
        }
        @else if $name != 'white' and $name != 'gray-dark' {
            @for $i from 1 to $step-count {
                $num: $i * $step-key-interval;
                $key: #{ $name + '-' + $num };
                $val: null;

                @if $i < $step-half {
                    $val: tint-color($color, $step-val-interval * ($step-half - $i) );
                }
                @else if $i == $step-half {
                    $val: $color
                }
                @else if $step-half < $i {
                    $val: shade-color($color, $step-val-interval * ($i % $step-half) );
                }
                
                $all-colors: map.set($all-colors, $key, $val);
            }
        }
    }
    @return $all-colors;
}

@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-Regular.eot');
    src: local('Azo Sans Regular'), local('AzoSans-Regular'),
        url('fonts/AzoSans-Regular.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Regular.woff2') format('woff2'),
        url('fonts/AzoSans-Regular.woff') format('woff'),
        url('fonts/AzoSans-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-Bold.eot');
    src: local('Azo Sans Bold'), local('AzoSans-Bold'),
        url('fonts/AzoSans-Bold.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Bold.woff2') format('woff2'),
        url('fonts/AzoSans-Bold.woff') format('woff'),
        url('fonts/AzoSans-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-Italic.eot');
    src: local('Azo Sans Italic'), local('AzoSans-Italic'),
        url('fonts/AzoSans-Italic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Italic.woff2') format('woff2'),
        url('fonts/AzoSans-Italic.woff') format('woff'),
        url('fonts/AzoSans-Italic.ttf') format('truetype');
    font-weight: normal;
    font-style: italic;
}
@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-BoldItalic.eot');
    src: local('Azo Sans Bold Italic'), local('AzoSans-BoldItalic'),
        url('fonts/AzoSans-BoldItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-BoldItalic.woff2') format('woff2'),
        url('fonts/AzoSans-BoldItalic.woff') format('woff'),
        url('fonts/AzoSans-BoldItalic.ttf') format('truetype');
    font-weight: bold;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Tn';
    src: url('fonts/AzoSans-Thin.eot');
    src: local('Azo Sans Thin'), local('AzoSans-Thin'),
        url('fonts/AzoSans-Thin.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Thin.woff2') format('woff2'),
        url('fonts/AzoSans-Thin.woff') format('woff'),
        url('fonts/AzoSans-Thin.ttf') format('truetype');
    font-weight: 100;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Tn';
    src: url('fonts/AzoSans-ThinItalic.eot');
    src: local('Azo Sans Thin Italic'), local('AzoSans-ThinItalic'),
        url('fonts/AzoSans-ThinItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-ThinItalic.woff2') format('woff2'),
        url('fonts/AzoSans-ThinItalic.woff') format('woff'),
        url('fonts/AzoSans-ThinItalic.ttf') format('truetype');
    font-weight: 100;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Lt';
    src: url('fonts/AzoSans-Light.eot');
    src: local('Azo Sans Light'), local('AzoSans-Light'),
        url('fonts/AzoSans-Light.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Light.woff2') format('woff2'),
        url('fonts/AzoSans-Light.woff') format('woff'),
        url('fonts/AzoSans-Light.ttf') format('truetype');
    font-weight: 300;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Lt';
    src: url('fonts/AzoSans-LightItalic.eot');
    src: local('Azo Sans Light Italic'), local('AzoSans-LightItalic'),
        url('fonts/AzoSans-LightItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-LightItalic.woff2') format('woff2'),
        url('fonts/AzoSans-LightItalic.woff') format('woff'),
        url('fonts/AzoSans-LightItalic.ttf') format('truetype');
    font-weight: 300;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Md';
    src: url('fonts/AzoSans-Medium.eot');
    src: local('Azo Sans Medium'), local('AzoSans-Medium'),
        url('fonts/AzoSans-Medium.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Medium.woff2') format('woff2'),
        url('fonts/AzoSans-Medium.woff') format('woff'),
        url('fonts/AzoSans-Medium.ttf') format('truetype');
    font-weight: 500;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Md';
    src: url('fonts/AzoSans-MediumItalic.eot');
    src: local('Azo Sans Medium Italic'), local('AzoSans-MediumItalic'),
        url('fonts/AzoSans-MediumItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-MediumItalic.woff2') format('woff2'),
        url('fonts/AzoSans-MediumItalic.woff') format('woff'),
        url('fonts/AzoSans-MediumItalic.ttf') format('truetype');
    font-weight: 500;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Bk';
    src: url('fonts/AzoSans-Black.eot');
    src: local('Azo Sans Black'), local('AzoSans-Black'),
        url('fonts/AzoSans-Black.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Black.woff2') format('woff2'),
        url('fonts/AzoSans-Black.woff') format('woff'),
        url('fonts/AzoSans-Black.ttf') format('truetype');
    font-weight: 900;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Bk';
    src: url('fonts/AzoSans-BlackItalic.eot');
    src: local('Azo Sans Black Italic'), local('AzoSans-BlackItalic'),
        url('fonts/AzoSans-BlackItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-BlackItalic.woff2') format('woff2'),
        url('fonts/AzoSans-BlackItalic.woff') format('woff'),
        url('fonts/AzoSans-BlackItalic.ttf') format('truetype');
    font-weight: 900;
    font-style: italic;
}


// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "bootstrap/scss/functions";

// 2. Include any default variable overrides here
$enable-rounded: false;
$enable-shadows: true;
// $enable-gradients: true;
$enable-negative-margins: true;

$font-family-sans-serif: 'Azo Sans';
$font-family-monospace: Consolas, 'Courier New', monospace;

$gray-900: #2A2A2C;
$gray-950: #1F1F21;

$custom-gray: (
  "950": $gray-950
);

$pink:    #d12e75;
$green:   #007933;
$teal:    #20c997;
$yellow:  #EDC620;
$cyan:    #24B1BC;

$primary: #007933;
$success: $teal;

$modal-backdrop-opacity: .6;


@function getDimensionValues($unit) {
    $values: (
        initial: initial,
        inherit: inherit,
        auto: auto
    );
    
    @for $i from 1 through 20 {
        $val: 5 * $i;
        $values: map.set($values, #{ $val }, #{ $val + $unit });
    }

    @return $values;
}
$utilities: (
    "width": (
        property: width,
        class: w,
        values: getDimensionValues('%')
    ),
    "max-width": (
        property: max-width,
        class: mw,
        values: getDimensionValues('%')
    ),
    "min-width": (
        property: min-width,
        class: min-w,
        values: getDimensionValues('%')
    ),
    "viewport-width": (
        property: width,
        class: vw,
        values: getDimensionValues('vw')
    ),
    "max-viewport-width": (
        property: max-width,
        class: max-vw,
        values: getDimensionValues('vw')
    ),
    "min-viewport-width": (
        property: min-width,
        class: min-vw,
        values: getDimensionValues('vw')
    ),
    "height": (
        property: height,
        class: h,
        values: getDimensionValues('%')
    ),
    "max-height": (
        property: max-height,
        class: mh,
        values: getDimensionValues('%')
    ),
    "min-height": (
        property: min-height,
        class: min-h,
        values: getDimensionValues('%')
    ),
    "viewport-height": (
        property: height,
        class: vh,
        values: getDimensionValues('vh')
    ),
    "max-viewport-height": (
        property: max-height,
        class: max-vh,
        values: getDimensionValues('vh')
    ),
    "min-viewport-height": (
        property: min-height,
        class: min-vh,
        values: getDimensionValues('vh')
    )
);

// 3. Include remainder of required Bootstrap stylesheets
@import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities"; //Optional

// 4.
$grays: map-merge($grays, $custom-gray);
$all-colors: getAllColors($colors, 20, $grays);
$colors: map-merge($colors, $all-colors);
$theme-colors: map-merge($theme-colors, (
    'darker': $gray-950
) );

// 6. 
@import "bootstrap/scss/root";      //Optional
@import "bootstrap/scss/reboot";    //Optional

// 4. Include any optional Bootstrap components as you like
// @import "bootstrap/scss/accordion";
// @import "bootstrap/scss/alert";
// @import "bootstrap/scss/badge";
// @import "bootstrap/scss/breadcrumb";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/card";
@import "bootstrap/scss/carousel";
@import "bootstrap/scss/close";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/dropdown";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/grid";
@import "bootstrap/scss/helpers";
@import "bootstrap/scss/images";
@import "bootstrap/scss/list-group";
@import "bootstrap/scss/modal";
@import "bootstrap/scss/nav";
@import "bootstrap/scss/navbar";
@import "bootstrap/scss/offcanvas";
@import "bootstrap/scss/pagination";
@import "bootstrap/scss/popover";
@import "bootstrap/scss/progress";
// @import "bootstrap/scss/spinners";
@import "bootstrap/scss/tables";
// @import "bootstrap/scss/toasts";
// @import "bootstrap/scss/tooltip";
@import "bootstrap/scss/transitions";
@import "bootstrap/scss/type";
@import "bootstrap/scss/utilities/_api.scss";
@import "bootstrap/scss/forms/floating-labels";
@import "bootstrap/scss/forms/form-check";
@import "bootstrap/scss/forms/form-control";
@import "bootstrap/scss/forms/form-range";
@import "bootstrap/scss/forms/form-select";
@import "bootstrap/scss/forms/form-text";
@import "bootstrap/scss/forms/input-group";
@import "bootstrap/scss/forms/labels";
@import "bootstrap/scss/forms/validation";
@import "bootstrap/scss/helpers/clearfix";
@import "bootstrap/scss/helpers/colored-links";
@import "bootstrap/scss/helpers/position";
@import "bootstrap/scss/helpers/ratio";
@import "bootstrap/scss/helpers/stretched-link";
@import "bootstrap/scss/helpers/text-truncation";
@import "bootstrap/scss/helpers/visually-hidden";
// @import "bootstrap/scss/mixins/alert";
// @import "bootstrap/scss/mixins/border-radius";
// @import "bootstrap/scss/mixins/box-shadow";
// @import "bootstrap/scss/mixins/breakpoints";
// @import "bootstrap/scss/mixins/buttons";
// @import "bootstrap/scss/mixins/caret";
// @import "bootstrap/scss/mixins/clearfix";
// @import "bootstrap/scss/mixins/color-scheme";
// @import "bootstrap/scss/mixins/container";
// @import "bootstrap/scss/mixins/deprecate";
// @import "bootstrap/scss/mixins/forms";
// @import "bootstrap/scss/mixins/gradients";
// @import "bootstrap/scss/mixins/grid";
// @import "bootstrap/scss/mixins/image";
// @import "bootstrap/scss/mixins/list-group";
// @import "bootstrap/scss/mixins/lists";
// @import "bootstrap/scss/mixins/pagination";
// @import "bootstrap/scss/mixins/reset-text";
// @import "bootstrap/scss/mixins/resize";
// @import "bootstrap/scss/mixins/table-variants";
// @import "bootstrap/scss/mixins/text-truncate";
// @import "bootstrap/scss/mixins/transition";
// @import "bootstrap/scss/mixins/utilities";
// @import "bootstrap/scss/mixins/visually-hidden";
@import "bootstrap/scss/vendor/rfs";

// 5. Add additional custom code here
.font-tn {
    font-family: 'Azo Sans Tn';
}
.font-lt {
    font-family: 'Azo Sans Lt';
}
.font-rg {
    font-family: 'Azo Sans';
}
.font-md {
    font-family: 'Azo Sans Md';
}
.font-bk {
    font-family: 'Azo Sans Bk';
}

html,
body,
#__next {
    width: 100%;
    height: 100%;
    overflow: auto;

    // .scrollbar {
        
    // }
}

//Scrollbar
$scrollbar-border-size: 3px;
$scrollbar-thumb-size: 10px;
$scrollbar-size: $scrollbar-thumb-size + 2 * $scrollbar-border-size;
$scrollbar-background: $light;
::-webkit-scrollbar { /* the scrollbar. */
    width: $scrollbar-size;
    height: $scrollbar-size;
}
// ::-webkit-scrollbar-button { /* the buttons on the scrollbar (arrows pointing upwards and downwards). */
// }
::-webkit-scrollbar-thumb { /* the draggable scrolling handle. */
    width: $scrollbar-thumb-size;
    height: $scrollbar-thumb-size;
    background: $green;
    border: $scrollbar-border-size solid $scrollbar-background;
    border-radius: $scrollbar-size;
}
::-webkit-scrollbar-track { /* the track (progress bar) of the scrollbar. */
    background: $scrollbar-background;
}
// ::-webkit-scrollbar-track-piece { /* the track (progress bar) NOT covered by the handle. */
// }
// ::-webkit-scrollbar-corner { /* the bottom corner of the scrollbar, where both horizontal and vertical scrollbars meet. */
// }


.btn-lg {
    font-family: 'Azo Sans Bk';
    font-size: 1rem;
}

.navbar {
    $base: 'navbar';
    $navbar-height: 3.5rem;
    $navbar-px: 0.75 * $spacer;
    @mixin whenExpanded($breakpoints) {
        @each $breakpoint in $breakpoints {
            // @debug 'in whenExpanded. class: #{ & }.navbar-expand-#{ $breakpoint }';
            &.navbar-expand-#{ $breakpoint } {
                @include media-breakpoint-up( $breakpoint ) {
                    @content;
                }
            }
        }
    }
    @mixin whenCollapsed($breakpoints) {
        @each $breakpoint in $breakpoints {
            // @debug 'in whenCollapsed. class: #{ & }.navbar-expand-#{ $breakpoint }';
            &.navbar-expand-#{ $breakpoint } {
                @include media-breakpoint-down( $breakpoint ) {
                    @content;
                }
            }
        }
    }
    @mixin withTheme($name){
        // @debug 'in withTheme. class: #{ & }.navbar-#{ $name }';
        &.navbar-#{ $name } {
            @content
        }
    }

    .nav-link.active {
        * {
            border-bottom: 3px solid $primary;
        }
    }

    .navbar-collapse {
        & > ul {

            li.dropdown {
                .dropdown-menu {
                    padding: 0;

                    & > li > .nav-link.active {
                        background-color: inherit;
                    }
                }
            }
        }
    }
    @each $name, $color in $theme-colors{
        @include withTheme( $name ){
            & {
                background-color: $color;
            }
            .navbar-collapse > ul li.dropdown .dropdown-menu {
                background-color: $color;

                & > li > .dropdown-item {
                    &:hover,
                    &:focus {
                        $mix-color: color-contrast($color, $light, $dark);
                        
                        background-color: mix($color, $mix-color, 90%);
                    }
                }
            }
        }
    }
    @include whenExpanded( map-keys($grid-breakpoints) ){
        .navbar-collapse{
            & > ul {
                margin-left: auto;

                li.dropdown {
                    .dropdown-menu {
                        font-size: 0.8rem;
                        border-top: 4px solid $primary;
                    }
                }
            }
        }

        &.fixed-top ~ .navbar-spacer {
            margin-top: $navbar-height;
        }
    }
    @include whenCollapsed( map-keys($grid-breakpoints) ){
        .navbar-collapse {
            font-size: 1.25rem;
            text-align: center;
            position: absolute;
            z-index: 1;
            top: $navbar-height;
            left: 0;
            right: 0;
            width: calc(100% - #{ $navbar-px * 2 });
            height: calc(100vh - #{ $navbar-height + $navbar-px });
            margin: 0 auto;
            border-style: solid;
            border-width: 1px;

            & > ul {
                height: calc(100% - #{ $navbar-px * 2 });
                width: calc(100% - #{ $navbar-px * 2 });
                margin: 0.75rem auto;
                box-shadow: 0 0 1rem 1px $dark;

                li.dropdown {
                    .dropdown-menu {
                        background-color: inherit;
                        text-align: center;
                        box-shadow: none;
                        margin: -#{ $spacer * 0.25 } 0 0;
                        border: none;
                        border-bottom: 1px solid $dark;
                    }
                }
            }
        }
        @each $name, $color in $theme-colors{
            @include withTheme( $name ){
                .navbar-collapse {
                    border-color: color-contrast($color, $light, $dark);

                    & > ul {
                        background-color: $color;
                    }
                }
            }
        }
    }
}

pre {
    tab-size: 4;
}

.code-comment {
    color: $primary;
    // font-family: 'Azo Sans Lt';
}

.scrollbar-hide {
    /* Hide scrollbar for IE, Edge and Firefox */
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */

    /* Hide scrollbar for Chrome, Safari and Opera */
    &::-webkit-scrollbar {
        display: none;
    }
}

footer {
    min-height: 15vh;
    background-color: $gray-950;
}

//For DataTable
table.dataTable {
	clear: both;
	margin-top: 6px !important;
	margin-bottom: 6px !important;
	max-width: none !important;
	border-collapse: separate !important;
	border-spacing: 0;
	td {
		-webkit-box-sizing: content-box;
		box-sizing: content-box;
	}
	th {
		-webkit-box-sizing: content-box;
		box-sizing: content-box;
	}
	td.dataTables_empty {
		text-align: center;
	}
	th.dataTables_empty {
		text-align: center;
	}
	>thead {
		>tr {
			>th {
				&:active {
					outline: none;
				}
				&:not(.sorting_disabled) {
					padding-right: 30px;
				}
			}
			>td {
				&:active {
					outline: none;
				}
				&:not(.sorting_disabled) {
					padding-right: 30px;
				}
			}
		}
		.sorting {
			cursor: pointer;
			position: relative;
			&:before {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 1em;
				content: "↑";
			}
			&:after {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 0.5em;
				content: "↓";
			}
		}
		.sorting_asc {
			cursor: pointer;
			position: relative;
			&:before {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 1em;
				content: "↑";
				opacity: 1;
			}
			&:after {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 0.5em;
				content: "↓";
			}
		}
		.sorting_desc {
			cursor: pointer;
			position: relative;
			&:before {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 1em;
				content: "↑";
			}
			&:after {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 0.5em;
				content: "↓";
				opacity: 1;
			}
		}
		.sorting_asc_disabled {
			cursor: pointer;
			position: relative;
			&:before {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 1em;
				content: "↑";
				opacity: 0;
			}
			&:after {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 0.5em;
				content: "↓";
			}
		}
		.sorting_desc_disabled {
			cursor: pointer;
			position: relative;
			&:before {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 1em;
				content: "↑";
			}
			&:after {
				position: absolute;
				bottom: 0.5em;
				display: block;
				opacity: 0.3;
				right: 0.5em;
				content: "↓";
				opacity: 0;
			}
		}
	}
	tbody {
		td.select-checkbox {
			position: relative;
			&:before {
				display: block;
				position: absolute;
				top: 1.2em;
				left: 50%;
				width: 12px;
				height: 12px;
				box-sizing: border-box;
				content: " ";
				margin-top: -2px;
				margin-left: -6px;
				border: 1px solid black;
				border-radius: 3px;
			}
			&:after {
				display: block;
				position: absolute;
				top: 1.2em;
				left: 50%;
				width: 12px;
				height: 12px;
				box-sizing: border-box;
			}
		}
		th.select-checkbox {
			position: relative;
			&:before {
				display: block;
				position: absolute;
				top: 1.2em;
				left: 50%;
				width: 12px;
				height: 12px;
				box-sizing: border-box;
				content: " ";
				margin-top: -2px;
				margin-left: -6px;
				border: 1px solid black;
				border-radius: 3px;
			}
			&:after {
				display: block;
				position: absolute;
				top: 1.2em;
				left: 50%;
				width: 12px;
				height: 12px;
				box-sizing: border-box;
			}
		}
	}
	tr.selected {
		td.select-checkbox {
			&:after {
				content: "✓";
				font-size: 20px;
				margin-top: -19px;
				margin-left: -6px;
				text-align: center;
				text-shadow: 1px 1px #B0BED9, -1px -1px #B0BED9, 1px -1px #B0BED9, -1px 1px #B0BED9;
			}
		}
		th.select-checkbox {
			&:after {
				content: "✓";
				font-size: 20px;
				margin-top: -19px;
				margin-left: -6px;
				text-align: center;
				text-shadow: 1px 1px #B0BED9, -1px -1px #B0BED9, 1px -1px #B0BED9, -1px 1px #B0BED9;
			}
		}
	}

    tbody > tr.selected,
    tbody > tr > .selected,
    &.display tbody > tr.selected:hover > .sorting_1,
    &.display tbody > tr:hover > .selected,
    &.order-column.hover tbody > tr > .selected:hover,
    &.order-column.hover tbody > tr.selected:hover > .sorting_1,
    &.order-column.hover tbody > tr:hover > .selected, /* background-color: #0c65e8; */
    &.display tbody > tr.selected:hover > .sorting_2,
    &.order-column.hover tbody > tr.selected:hover > .sorting_2, /* background-color: #0c66ea; */
    &.display tbody > tr.selected:hover > .sorting_3,
    &.order-column.hover tbody > tr.selected:hover > .sorting_3, /* background-color: #0c67ed; */
    &.display tbody > tr.odd.selected > .sorting_1,
    &.order-column.stripe tbody > tr.odd > .selected,
    &.order-column.stripe tbody > tr.odd.selected > .sorting_1, /* background-color: #0c68ef; */
    &.display tbody > tr.odd.selected > .sorting_2,
    &.order-column.stripe tbody > tr.odd.selected > .sorting_2, /* background-color: #0c69f1; */
    &.display tbody > tr.odd.selected > .sorting_3,
    &.order-column.stripe tbody > tr.odd.selected > .sorting_3, /* background-color: #0c6af3; */
    &.display tbody > tr.selected:hover,
    &.hover tbody > tr > .selected:hover,
    &.hover tbody > tr.selected:hover, /* background-color: #0d6af4; */
    &.display tbody > tr > .selected:hover, /* background-color: #0d6af4;background-color: #0c65e8; */
    &.display tbody > tr.odd.selected,
    &.stripe tbody > tr.odd > .selected,
    &.stripe tbody > tr.odd.selected, /* background-color: #0d6bf7; */
    &.display tbody > tr.odd > .selected, /* background-color: #0d6bf7;background-color: #0c68ef; */
    &.display tbody > tr > .selected,
    &.display tbody > tr.even > .selected,
    &.display tbody > tr.even.selected > .sorting_1,
    &.display tbody > tr.selected > .sorting_1,
    &.display tbody > tr.selected > .sorting_2,
    &.display tbody > tr.selected > .sorting_3,
    &.order-column tbody > tr > .selected,
    &.order-column tbody > tr.selected > .sorting_1,
    &.order-column tbody > tr.selected > .sorting_2,
    &.order-column tbody > tr.selected > .sorting_3,
    &.order-column.stripe tbody > tr.even > .selected,
    &.order-column.stripe tbody > tr.even.selected > .sorting_1, /* background-color: #0d6cf8; */
    &.display tbody > tr.even.selected > .sorting_2,
    &.order-column.stripe tbody > tr.even.selected > .sorting_2, /* background-color: #0d6dfa; */
    &.display tbody > tr.even.selected > .sorting_3,
    &.order-column.stripe tbody > tr.even.selected > .sorting_3 {
        color: color-contrast($primary, $light, $dark);
        background-color: $primary;
    }

    &.nowrap {
        th {
            white-space: nowrap;
        }
        td {
            white-space: nowrap;
        }
    }

    &.table-sm {
        >thead {
            >tr {
                >th {
                    &:not(.sorting_disabled) {
                        padding-right: 20px;
                    }
                }
            }
        }
        .sorting {
            &:before {
                top: 5px;
                right: 0.85em;
            }
            &:after {
                top: 5px;
            }
        }
        .sorting_asc {
            &:before {
                top: 5px;
                right: 0.85em;
            }
            &:after {
                top: 5px;
            }
        }
        .sorting_desc {
            &:before {
                top: 5px;
                right: 0.85em;
            }
            &:after {
                top: 5px;
            }
        }
    }

    &.table-bordered {
        border-right-width: 0;
        thead {
            tr {
                &:first-child {
                    th {
                        border-top-width: 1px;
                    }
                    td {
                        border-top-width: 1px;
                    }
                }
            }
        }
        th {
            border-left-width: 0;
            border-bottom-width: 1px;
            &:first-child {
                border-left-width: 1px;
                border-left-width: 1px;
            }
            &:last-child {
                border-right-width: 1px;
                border-right-width: 1px;
            }
        }
        td {
            border-left-width: 0;
            border-bottom-width: 1px;
            &:first-child {
                border-left-width: 1px;
                border-left-width: 1px;
            }
            &:last-child {
                border-right-width: 1px;
                border-right-width: 1px;
            }
        }
    }

    &.compact {
        tbody {
            td.select-checkbox {
                &:before {
                    margin-top: -12px;
                }
            }
            th.select-checkbox {
                &:before {
                    margin-top: -12px;
                }
            }
        }
        tr.selected {
            td.select-checkbox {
                &:after {
                    margin-top: -16px;
                }
            }
            th.select-checkbox {
                &:after {
                    margin-top: -16px;
                }
            }
        }
    }
}
div.dataTables {
    &#{'_wrapper'} {
        div.dataTables_length {
            label {
                font-weight: normal;
                text-align: left;
                white-space: nowrap;
            }
            select {
                width: auto;
                display: inline-block;
            }
        }
        div.dataTables_filter {
            text-align: right;
            label {
                font-weight: normal;
                white-space: nowrap;
                text-align: left;
            }
            input {
                margin-left: 0.5em;
                display: inline-block;
                width: auto;
            }
        }
        div.dataTables_info {
            padding-top: 0.85em;
        }
        div.dataTables_paginate {
            margin: 0;
            white-space: nowrap;
            text-align: right;
            ul.pagination {
                margin: 2px 0;
                white-space: nowrap;
                justify-content: flex-end;
            }
        }
        div.dataTables_processing {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 200px;
            margin-left: -100px;
            margin-top: -26px;
            text-align: center;
            padding: 1em 0;
        }
        span.select-info {
            margin-left: 0.5em;
        }
        span.select-item {
            margin-left: 0.5em;
        }
        @media screen and (max-width: 767px) {
            div.dataTables_length {
                text-align: center;
            }
            div.dataTables_filter {
                text-align: center;
            }
            div.dataTables_info {
                text-align: center;
            }
            div.dataTables_paginate {
                text-align: center;
                ul.pagination {
                    justify-content: center !important;
                }
            }
        }
        @media screen and (max-width: 640px) {
            span.select-info {
                margin-left: 0;
                display: block;
            }
            span.select-item {
                margin-left: 0;
                display: block;
            }
        }
    }
    &#{'_scrollHead'} {
        table.dataTable {
            margin-bottom: 0 !important;
        }
        table.table-bordered {
            border-bottom-width: 0;
        }
    }
    &#{'_scrollBody'} {
        table {
            border-top: none;
            margin-top: 0 !important;
            margin-bottom: 0 !important;
            thead {
                .sorting {
                    &:before {
                        display: none;
                    }
                    &:after {
                        display: none;
                    }
                }
                .sorting_asc {
                    &:before {
                        display: none;
                    }
                    &:after {
                        display: none;
                    }
                }
                .sorting_desc {
                    &:before {
                        display: none;
                    }
                    &:after {
                        display: none;
                    }
                }
            }
            tbody {
                tr {
                    &:first-child {
                        th {
                            border-top: none;
                        }
                        td {
                            border-top: none;
                        }
                    }
                }
            }
        }
    }
    &#{'_scrollFoot'} {
        >.dataTables_scrollFootInner {
            box-sizing: content-box;
            >table {
                margin-top: 0 !important;
                border-top: none;
            }
        }
    }
}
div.table-responsive {
	>div.dataTables_wrapper {
		>div.row {
			margin: 0;
			>div[class^=col-] {
				&:first-child {
					padding-left: 0;
				}
				&:last-child {
					padding-right: 0;
				}
			}
		}
	}
}
