@use "sass:map";
@use 'sass:math';

@function getAllColors($colors, $step-count: 10, $grays: $grays){
    $step-half: math.div($step-count, 2);
    $step-key-interval: math.div(1000, $step-count);
    $step-val-interval: math.div(100%, $step-half);
    $all-colors: ();
    @each $name, $color in $colors {
        @if $name == 'gray' {
            @each $num, $color in $grays {
                $key: #{ $name + '-' + $num };
                $val: $color;
                
                $all-colors: map.set($all-colors, $key, $val);
            }
        }
        @else if $name != 'white' and $name != 'gray-dark' {
            @for $i from 1 to $step-count {
                $num: $i * $step-key-interval;
                $key: #{ $name + '-' + $num };
                $val: null;

                @if $i < $step-half {
                    $val: tint-color($color, $step-val-interval * ($step-half - $i) );
                }
                @else if $i == $step-half {
                    $val: $color
                }
                @else if $step-half < $i {
                    $val: shade-color($color, $step-val-interval * ($i % $step-half) );
                }
                
                $all-colors: map.set($all-colors, $key, $val);
            }
        }
    }
    @return $all-colors;
}

@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-Regular.eot');
    src: local('Azo Sans Regular'), local('AzoSans-Regular'),
        url('fonts/AzoSans-Regular.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Regular.woff2') format('woff2'),
        url('fonts/AzoSans-Regular.woff') format('woff'),
        url('fonts/AzoSans-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-Bold.eot');
    src: local('Azo Sans Bold'), local('AzoSans-Bold'),
        url('fonts/AzoSans-Bold.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Bold.woff2') format('woff2'),
        url('fonts/AzoSans-Bold.woff') format('woff'),
        url('fonts/AzoSans-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-Italic.eot');
    src: local('Azo Sans Italic'), local('AzoSans-Italic'),
        url('fonts/AzoSans-Italic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Italic.woff2') format('woff2'),
        url('fonts/AzoSans-Italic.woff') format('woff'),
        url('fonts/AzoSans-Italic.ttf') format('truetype');
    font-weight: normal;
    font-style: italic;
}
@font-face {
    font-family: 'Azo Sans';
    src: url('fonts/AzoSans-BoldItalic.eot');
    src: local('Azo Sans Bold Italic'), local('AzoSans-BoldItalic'),
        url('fonts/AzoSans-BoldItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-BoldItalic.woff2') format('woff2'),
        url('fonts/AzoSans-BoldItalic.woff') format('woff'),
        url('fonts/AzoSans-BoldItalic.ttf') format('truetype');
    font-weight: bold;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Tn';
    src: url('fonts/AzoSans-Thin.eot');
    src: local('Azo Sans Thin'), local('AzoSans-Thin'),
        url('fonts/AzoSans-Thin.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Thin.woff2') format('woff2'),
        url('fonts/AzoSans-Thin.woff') format('woff'),
        url('fonts/AzoSans-Thin.ttf') format('truetype');
    font-weight: 100;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Tn';
    src: url('fonts/AzoSans-ThinItalic.eot');
    src: local('Azo Sans Thin Italic'), local('AzoSans-ThinItalic'),
        url('fonts/AzoSans-ThinItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-ThinItalic.woff2') format('woff2'),
        url('fonts/AzoSans-ThinItalic.woff') format('woff'),
        url('fonts/AzoSans-ThinItalic.ttf') format('truetype');
    font-weight: 100;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Lt';
    src: url('fonts/AzoSans-Light.eot');
    src: local('Azo Sans Light'), local('AzoSans-Light'),
        url('fonts/AzoSans-Light.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Light.woff2') format('woff2'),
        url('fonts/AzoSans-Light.woff') format('woff'),
        url('fonts/AzoSans-Light.ttf') format('truetype');
    font-weight: 300;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Lt';
    src: url('fonts/AzoSans-LightItalic.eot');
    src: local('Azo Sans Light Italic'), local('AzoSans-LightItalic'),
        url('fonts/AzoSans-LightItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-LightItalic.woff2') format('woff2'),
        url('fonts/AzoSans-LightItalic.woff') format('woff'),
        url('fonts/AzoSans-LightItalic.ttf') format('truetype');
    font-weight: 300;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Md';
    src: url('fonts/AzoSans-Medium.eot');
    src: local('Azo Sans Medium'), local('AzoSans-Medium'),
        url('fonts/AzoSans-Medium.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Medium.woff2') format('woff2'),
        url('fonts/AzoSans-Medium.woff') format('woff'),
        url('fonts/AzoSans-Medium.ttf') format('truetype');
    font-weight: 500;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Md';
    src: url('fonts/AzoSans-MediumItalic.eot');
    src: local('Azo Sans Medium Italic'), local('AzoSans-MediumItalic'),
        url('fonts/AzoSans-MediumItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-MediumItalic.woff2') format('woff2'),
        url('fonts/AzoSans-MediumItalic.woff') format('woff'),
        url('fonts/AzoSans-MediumItalic.ttf') format('truetype');
    font-weight: 500;
    font-style: italic;
}

@font-face {
    font-family: 'Azo Sans Bk';
    src: url('fonts/AzoSans-Black.eot');
    src: local('Azo Sans Black'), local('AzoSans-Black'),
        url('fonts/AzoSans-Black.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-Black.woff2') format('woff2'),
        url('fonts/AzoSans-Black.woff') format('woff'),
        url('fonts/AzoSans-Black.ttf') format('truetype');
    font-weight: 900;
    font-style: normal;
}
@font-face {
    font-family: 'Azo Sans Bk';
    src: url('fonts/AzoSans-BlackItalic.eot');
    src: local('Azo Sans Black Italic'), local('AzoSans-BlackItalic'),
        url('fonts/AzoSans-BlackItalic.eot?#iefix') format('embedded-opentype'),
        url('fonts/AzoSans-BlackItalic.woff2') format('woff2'),
        url('fonts/AzoSans-BlackItalic.woff') format('woff'),
        url('fonts/AzoSans-BlackItalic.ttf') format('truetype');
    font-weight: 900;
    font-style: italic;
}


// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "bootstrap/scss/functions";

// 2. Include any default variable overrides here
$enable-rounded: false;
$enable-shadows: true;
// $enable-gradients: true;
$enable-negative-margins: true;

$font-family-sans-serif: 'Azo Sans';
$font-family-monospace: Consolas, 'Courier New', monospace;

$gray-900: #2A2A2C;
$gray-950: #1F1F21;

$custom-gray: (
  "950": $gray-950
);

$pink:    #d12e75;
$green:   #007933;
$teal:    #20c997;
$yellow:  #EDC620;
$blue:    #24B1BC;

$primary: #007933;
$success: $teal;

$modal-backdrop-opacity: .6;


@function getDimensionValues($unit) {
    $values: (
        initial: initial,
        inherit: inherit,
        auto: auto
    );
    
    @for $i from 1 through 20 {
        $val: 5 * $i;
        $values: map.set($values, #{ $val }, #{ $val + $unit });
    }

    @return $values;
}
$utilities: (
    "width": (
        property: width,
        class: w,
        values: getDimensionValues('%')
    ),
    "max-width": (
        property: max-width,
        class: mw,
        values: getDimensionValues('%')
    ),
    "min-width": (
        property: min-width,
        class: min-w,
        values: getDimensionValues('%')
    ),
    "viewport-width": (
        property: width,
        class: vw,
        values: getDimensionValues('vw')
    ),
    "max-viewport-width": (
        property: max-width,
        class: max-vw,
        values: getDimensionValues('vw')
    ),
    "min-viewport-width": (
        property: min-width,
        class: min-vw,
        values: getDimensionValues('vw')
    ),
    "height": (
        property: height,
        class: h,
        values: getDimensionValues('%')
    ),
    "max-height": (
        property: max-height,
        class: mh,
        values: getDimensionValues('%')
    ),
    "min-height": (
        property: min-height,
        class: min-h,
        values: getDimensionValues('%')
    ),
    "viewport-height": (
        property: height,
        class: vh,
        values: getDimensionValues('vh')
    ),
    "max-viewport-height": (
        property: max-height,
        class: max-vh,
        values: getDimensionValues('vh')
    ),
    "min-viewport-height": (
        property: min-height,
        class: min-vh,
        values: getDimensionValues('vh')
    )
);

// 3. Include remainder of required Bootstrap stylesheets
@import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities"; //Optional

// 4.
$grays: map-merge($grays, $custom-gray);
$all-colors: getAllColors($colors, 20, $grays);
$colors: map-merge($colors, $all-colors);

// 6. 
@import "bootstrap/scss/root";      //Optional
@import "bootstrap/scss/reboot";    //Optional

// 4. Include any optional Bootstrap components as you like
@import "bootstrap/scss/accordion";
@import "bootstrap/scss/alert";
@import "bootstrap/scss/badge";
@import "bootstrap/scss/breadcrumb";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/card";
@import "bootstrap/scss/carousel";
@import "bootstrap/scss/close";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/dropdown";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/grid";
@import "bootstrap/scss/helpers";
@import "bootstrap/scss/images";
@import "bootstrap/scss/list-group";
@import "bootstrap/scss/modal";
@import "bootstrap/scss/nav";
@import "bootstrap/scss/navbar";
@import "bootstrap/scss/offcanvas";
@import "bootstrap/scss/pagination";
@import "bootstrap/scss/popover";
@import "bootstrap/scss/progress";
@import "bootstrap/scss/spinners";
@import "bootstrap/scss/tables";
@import "bootstrap/scss/toasts";
@import "bootstrap/scss/tooltip";
@import "bootstrap/scss/transitions";
@import "bootstrap/scss/type";
@import "bootstrap/scss/utilities/_api.scss";
@import "bootstrap/scss/forms/floating-labels";
@import "bootstrap/scss/forms/form-check";
@import "bootstrap/scss/forms/form-control";
@import "bootstrap/scss/forms/form-range";
@import "bootstrap/scss/forms/form-select";
@import "bootstrap/scss/forms/form-text";
@import "bootstrap/scss/forms/input-group";
@import "bootstrap/scss/forms/labels";
@import "bootstrap/scss/forms/validation";
@import "bootstrap/scss/helpers/clearfix";
@import "bootstrap/scss/helpers/colored-links";
@import "bootstrap/scss/helpers/position";
@import "bootstrap/scss/helpers/ratio";
@import "bootstrap/scss/helpers/stretched-link";
@import "bootstrap/scss/helpers/text-truncation";
@import "bootstrap/scss/helpers/visually-hidden";
@import "bootstrap/scss/mixins/alert";
@import "bootstrap/scss/mixins/border-radius";
@import "bootstrap/scss/mixins/box-shadow";
@import "bootstrap/scss/mixins/breakpoints";
@import "bootstrap/scss/mixins/buttons";
@import "bootstrap/scss/mixins/caret";
@import "bootstrap/scss/mixins/clearfix";
@import "bootstrap/scss/mixins/color-scheme";
@import "bootstrap/scss/mixins/container";
@import "bootstrap/scss/mixins/deprecate";
@import "bootstrap/scss/mixins/forms";
@import "bootstrap/scss/mixins/gradients";
@import "bootstrap/scss/mixins/grid";
@import "bootstrap/scss/mixins/image";
@import "bootstrap/scss/mixins/list-group";
@import "bootstrap/scss/mixins/lists";
@import "bootstrap/scss/mixins/pagination";
@import "bootstrap/scss/mixins/reset-text";
@import "bootstrap/scss/mixins/resize";
@import "bootstrap/scss/mixins/table-variants";
@import "bootstrap/scss/mixins/text-truncate";
@import "bootstrap/scss/mixins/transition";
@import "bootstrap/scss/mixins/utilities";
@import "bootstrap/scss/mixins/visually-hidden";
@import "bootstrap/scss/vendor/rfs";

// 5. Add additional custom code here
.font-tn {
    font-family: 'Azo Sans Tn';
}
.font-lt {
    font-family: 'Azo Sans Lt';
}
.font-rg {
    font-family: 'Azo Sans';
}
.font-md {
    font-family: 'Azo Sans Md';
}
.font-bk {
    font-family: 'Azo Sans Bk';
}

.btn-lg {
    font-family: 'Azo Sans Bk';
    font-size: 1rem;
}

.navbar {
    $base: 'navbar';
    $navbar-height: 3.5rem;
    $navbar-px: 0.75 * $spacer;
    @mixin whenExpanded($breakpoints) {
        @each $breakpoint in $breakpoints {
            // @debug 'in whenExpanded. class: #{ & }.navbar-expand-#{ $breakpoint }';
            &.navbar-expand-#{ $breakpoint } {
                @include media-breakpoint-up( $breakpoint ) {
                    @content;
                }
            }
        }
    }
    @mixin whenCollapsed($breakpoints) {
        @each $breakpoint in $breakpoints {
            // @debug 'in whenCollapsed. class: #{ & }.navbar-expand-#{ $breakpoint }';
            &.navbar-expand-#{ $breakpoint } {
                @include media-breakpoint-down( $breakpoint ) {
                    @content;
                }
            }
        }
    }
    @mixin withTheme($name){
        // @debug 'in withTheme. class: #{ & }.navbar-#{ $name }';
        &.navbar-#{ $name } {
            @content
        }
    }

    .nav-link.active {
        * {
            border-bottom: 3px solid $primary;
        }
    }

    .navbar-collapse {
        & > ul {

            li.dropdown {
                .dropdown-menu {
                    padding: 0;

                    & > li > .nav-link.active {
                        background-color: inherit;
                    }
                }
            }
        }
    }
    @each $name, $color in $theme-colors{
        @include withTheme( $name ){
            .navbar-collapse > ul li.dropdown .dropdown-menu {
                background-color: $color;

                & > li > .dropdown-item {
                    &:hover,
                    &:focus {
                        $mix-color: color-contrast($color, $light, $dark);
                        
                        background-color: mix($color, $mix-color, 90%);
                    }
                }
            }
        }
    }
    @include whenExpanded( map-keys($grid-breakpoints) ){
        .navbar-collapse{
            & > ul {
                margin-left: auto;

                li.dropdown {
                    .dropdown-menu {
                        font-size: 0.8rem;
                        border-top: 4px solid $primary;
                    }
                }
            }
        }
    }
    @include whenCollapsed( map-keys($grid-breakpoints) ){
        .navbar-collapse {
            font-size: 1.25rem;
            text-align: center;
            position: absolute;
            z-index: 1;
            top: $navbar-height;
            left: 0;
            right: 0;
            width: calc(100% - #{ $navbar-px * 2 });
            height: calc(100vh - #{ $navbar-height + $navbar-px });
            margin: 0 auto;
            border-style: solid;
            border-width: 1px;

            & > ul {
                height: calc(100% - #{ $navbar-px * 2 });
                width: calc(100% - #{ $navbar-px * 2 });
                margin: 0.75rem auto;
                box-shadow: 0 0 1rem 1px $dark;

                li.dropdown {
                    .dropdown-menu {
                        background-color: inherit;
                        text-align: center;
                        box-shadow: none;
                        margin: -#{ $spacer * 0.25 } 0 0;
                        border: none;
                        border-bottom: 1px solid $dark;
                    }
                }
            }
        }
        @each $name, $color in $theme-colors{
            @include withTheme( $name ){
                .navbar-collapse {
                    border-color: color-contrast($color, $light, $dark);

                    & > ul {
                        background-color: $color;
                    }
                }
            }
        }
    }
}
pre {
    tab-size: 4;
}

.code-comment {
    color: $primary;
    // font-family: 'Azo Sans Lt';
}

.scrollbar-hide {
    /* Hide scrollbar for IE, Edge and Firefox */
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */

    /* Hide scrollbar for Chrome, Safari and Opera */
    &::-webkit-scrollbar {
        display: none;
    }
}
